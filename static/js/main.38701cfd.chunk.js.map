{"version":3,"sources":["Components/LoadingCircle.js","Components/BasicForm.js","Store/Slices/loginSlice.js","Views/LoginView.js","Views/MainPage/UploadDialog.js","Utility/AirportParse.js","Store/Slices/airportSlice.js","Views/MainPage/AirportTable.js","Views/MainPage/SideBar.js","Views/MainPage/Map.js","Views/MainPage/MainPageView.js","Hooks/useFormValidation.js","Views/SingUpView.js","App.js","serviceWorker.js","Store/reduxStore.js","index.js"],"names":["useStyles","makeStyles","theme","loadingCircle","flexGrow","padding","spacing","loadingContainer","paddingTop","display","alignItems","justifyContent","alignContent","flexDirection","LoadingCircle","props","classes","Container","maxWidth","className","CircularProgress","BasicForm","useState","formState","setFormState","submitted","setSubmitted","id","onChange","e","target","name","value","onSubmit","preventDefault","setTimeout","afterSubmit","children","loginSlice","createSlice","initialState","login","logged","reducers","setLogin","state","action","payload","actions","selectLogin","selectLogged","useStyle","container","text","paddingBottom","LoginView","routerHistory","useHistory","dispatch","useDispatch","loginFormContent","Grid","direction","justify","item","xs","TextField","fullWidth","required","autoFocus","label","variant","type","sm","Button","color","size","Typography","component","gutterBottom","Link","RouterLink","to","ok","obj","push","UploadDialog","Dialog","onClose","handleClose","aria-labelledby","open","DialogTitle","DialogContent","Input","inputProps","accept","event","console","log","DialogActions","onClick","ParseDMS","input","exec","AbsoluteDMSToDD","str_degrees","str_minutes","str_seconds","Number","airportReducer","airports","AddAirport","SetAirports","selectAllAirports","airport","AirportTable","useSelector","TableContainer","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","city","description","created_at","runways","length","root","backgroundColor","palette","background","paper","MainPageSideBar","username","isDialogOpen","setIsDialogOpen","List","ListItem","ListItemAvatar","Avatar","charAt","toUpperCase","ListItemText","primary","Divider","button","ListItemIcon","defaultAirports","aerodromes","MainMap","containerId","setMap","useEffect","mymap","L","setView","tileLayer","attribution","maxZoom","tileSize","zoomOffset","accessToken","addTo","allPositions","forEach","airportCoord","dms","latitudeResult","latitudeValue","replace","longitudeResult","longitudeValue","ConvertDMSToDD","marker","title","on","flyTo","getLatLng","bindPopup","popup","setContent","flyToBounds","drawer","width","flexShrink","content","height","MainPageView","square","SideBar","useValidationPropsTextField","validationObject","elementsState","setElementsState","setElement","Object","keys","_id","useFormValidation","formError","onChangeFormError","error","Boolean","helperText","disabled","errors","checkButtonState","SignUpView","passwordValue","setPasswordValue","test","validationProps","buttonProps","SignUpForm","gridCointainer","App","basename","exact","path","SingUpView","window","location","hostname","match","configureStore","reducer","loginReducer","ReactDOM","render","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.38701cfd.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress, Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  loadingCircle: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n  },\n\n  loadingContainer: {\n    paddingTop: \"20px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    flexDirection: \"column\",\n  },\n}));\n\n//This is a LoadingCircle component. It returns a centered loading circle\nfunction LoadingCircle(props) {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"xs\" className={classes.loadingContainer}>\n      <CircularProgress className={classes.loadingCircle} />\n    </Container>\n  );\n}\n\nexport default LoadingCircle;\n","import React, { useState } from \"react\";\nimport LoadingCircle from \"./LoadingCircle.js\";\n/*\nThis component abstract a basic form. The form state is recorded with raect use state, and can be used to validate the form \n  Usage:\n    Props:\n      id - id for the form tag\n      children - JSX to be renderer inside the forms- buttons and texts inputs etc.. - Basically the form content\n      afterSubmit - callback called after the forms in submitted\n*/\nfunction BasicForm(props) {\n  const [formState, setFormState] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n\n  function submitForm(e) {\n    e.preventDefault();\n    setSubmitted(true);\n\n    //here is where we would submit the form with AJAX\n    //setTimeout to simulate AJAX request\n    setTimeout(() => {\n      //assume okay response, since we are not sending a real AJAX request\n      if (props.afterSubmit) props.afterSubmit(true, formState);\n    }, 400);\n  }\n\n  function changedForm(e) {\n    //Update state\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n  }\n\n  return (\n    <form id={props.id} onChange={changedForm} onSubmit={submitForm}>\n      {submitted ? <LoadingCircle /> : props.children}\n    </form>\n  );\n}\n\nexport default BasicForm;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  login: \"\",\n  logged: false,\n};\n\n//Create store slice- for login\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState: initialState,\n  reducers: {\n    setLogin: (state, action) => {\n      state.login = action.payload;\n      if (action.payload) {\n        state.logged = true;\n      }\n    },\n  },\n});\n\nexport default loginSlice.reducer;\n\n//Actions\nexport const { setLogin } = loginSlice.actions;\n\n//Selectors\nexport const selectLogin = (state) => state.login.login;\nexport const selectLogged = (state) => state.login.logged;\n","import React from \"react\";\n\nimport {\n  Button,\n  TextField,\n  Grid,\n  Container,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport BasicForm from \"../Components/BasicForm.js\";\n\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setLogin } from \"../Store/Slices/loginSlice.js\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    paddingTop: \"2em\",\n  },\n\n  text: {\n    paddingBottom: \"2em\",\n  },\n}));\n\nfunction LoginView() {\n  const classes = useStyle();\n  const routerHistory = useHistory();\n  const dispatch = useDispatch();\n\n  const loginFormContent = (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"stretch\"\n      alignContent=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          required\n          autoFocus={true}\n          name=\"login\"\n          id=\"login_username\"\n          label=\"Username\"\n          variant=\"outlined\"\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          required\n          type=\"password\"\n          name=\"password\"\n          id=\"login_password\"\n          label=\"Password\"\n          variant=\"outlined\"\n        />\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n        >\n          LOG IN\n        </Button>\n      </Grid>\n    </Grid>\n  );\n\n  function afterLogin(ok, obj) {\n    if (ok) {\n      dispatch(setLogin(obj.login));\n      routerHistory.push(\"/home\");\n    }\n    //We would handle errors here\n  }\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Typography variant=\"h5\" component=\"h1\" gutterBottom>\n        Login\n      </Typography>\n\n      <Typography variant=\"body2\" className={classes.text}>\n        <Link component={RouterLink} to=\"/signup\">\n          Don't have a account?\n        </Link>\n      </Typography>\n\n      <BasicForm id=\"loginForm\" afterSubmit={afterLogin}>\n        {loginFormContent}\n      </BasicForm>\n    </Container>\n  );\n}\n\nexport default LoginView;\n","import React from \"react\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Input,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\n//Props- input:\n//shouldOpen\nfunction UploadDialog(props) {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      onClose={props.handleClose}\n      aria-labelledby=\"uploadfile-dialog-title\"\n      open={props.open}\n    >\n      <DialogTitle id=\"uploadfile-dialog-title\">Upload a file</DialogTitle>\n      <DialogContent>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          inputProps={{\n            accept: \".json, .txt, .pdf\",\n          }}\n          onChange={(event) => console.log(event.target.value)}\n        ></Input>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\">\n          Upload\n        </Button>\n        <Button onClick={props.handleClose} color=\"secondary\">\n          Exit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default UploadDialog;\n","/*\n This file contains utility functions for helping parsing an airport json file.\n All functions here are pure functions.\n*/\n\n//Returns, if present a  DMS coordinate in the input text\nexport function ParseDMS(input) {\n  /*\n  let r1 = /\\d{6}S\\/\\d{7}W/i;\n  let r2 = /\\d{6}\\.\\d{2}S\\/\\d{7}\\.\\d{2}W/i;\n  let r3 = /\\d{6},\\d{2}S\\/\\d{7},\\d{2}W/i;\n  */\n  const dmsRegex = /\\d{6}([,.]\\d{2})?S\\/0?\\d{6}([,.]\\d{2})?W/i;\n  const result = dmsRegex.exec(input);\n\n  return result[0];\n}\n\n//This function converts a DMS coordinate string to DD format [latitude,longitude]\nexport function ConvertDMSToDD(dms) {\n  //This regex captures the first part of the DMS coordinates, and separates the minutes,seconds,and degrees\n  const latitudeRegex = /0?(\\d{2})(\\d{2})(\\d{2}([,.]\\d{2})?)([SN])/i;\n  const latitudeResult = latitudeRegex.exec(dms);\n  if (!latitudeResult) {\n    return null;\n  }\n  let latitudeValue = AbsoluteDMSToDD(\n    latitudeResult[1],\n    latitudeResult[2],\n    latitudeResult[3].replace(\",\", \".\")\n  );\n  latitudeValue = latitudeResult[5] === \"S\" ? -latitudeValue : latitudeValue;\n\n  const longitudeRegex = /0?(\\d{2})(\\d{2})(\\d{2}([,.]\\d{2})?)([WE])/i;\n  const longitudeResult = longitudeRegex.exec(dms);\n  if (!longitudeResult) {\n    return null;\n  }\n  let longitudeValue = AbsoluteDMSToDD(\n    longitudeResult[1],\n    longitudeResult[2],\n    longitudeResult[3].replace(\",\", \".\")\n  );\n  longitudeValue =\n    longitudeResult[5] === \"W\" ? -longitudeValue : longitudeValue;\n\n  return [latitudeValue, longitudeValue];\n}\n\nfunction AbsoluteDMSToDD(str_degrees, str_minutes, str_seconds) {\n  const degress = Number(str_degrees);\n  const minutes = Number(str_minutes);\n  const seconds = Number(str_seconds);\n\n  const decimalDegrees = degress + minutes / 60 + seconds / 3600;\n\n  return decimalDegrees;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  airports: [],\n};\n\nconst airportReducer = createSlice({\n  name: \"airport\",\n  initialState: initialState,\n  reducers: {\n    AddAirport: (state, action) => {\n      state.airports.push(action.payload);\n    },\n    SetAirports: (state, action) => {\n      state.airports = action.payload;\n    },\n  },\n});\n\n//Reducer\nexport default airportReducer.reducer;\n\n//Actions\nexport const { AddAirport, SetAirports } = airportReducer.actions;\n\n//Selectors\nexport const selectAllAirports = (state) => state.airport.airports;\nexport const selectAirport = (id) => (state) => state.airport.airports[id];\n","import React from \"react\";\n\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//Utility\nimport { ParseDMS } from \"../../Utility/AirportParse.js\";\n\n//Store\nimport { useSelector } from \"react-redux\";\nimport { selectAllAirports } from \"../../Store/Slices/airportSlice\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction AirportTable() {\n  const classes = useStyles();\n  const airports = useSelector(selectAllAirports);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">DMS</TableCell>\n            <TableCell align=\"right\">Created At</TableCell>\n            <TableCell align=\"right\">Runways</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {airports.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.city}</TableCell>\n              <TableCell align=\"right\">{ParseDMS(row.description)}</TableCell>\n              <TableCell align=\"right\">{row.created_at}</TableCell>\n              <TableCell align=\"right\">{row.runways.length}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default AirportTable;\n","import React, { useState } from \"react\";\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Avatar,\n  ListItemAvatar,\n  Divider,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport BackupIcon from \"@material-ui/icons/Backup\";\n\nimport UploadDialog from \"./UploadDialog.js\";\nimport AirportTable from \"./AirportTable.js\";\n\n//Store\nimport { useDispatch } from \"react-redux\";\nimport { SetAirports } from \"../../Store/Slices/airportSlice\";\n\n//default airports example\nimport defaultAirports from \"../../locationsExemple.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction MainPageSideBar(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const username = props.username;\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  return (\n    <>\n      <UploadDialog\n        open={isDialogOpen}\n        handleClose={() => setIsDialogOpen(false)}\n      />\n      <List\n        className={classes.root}\n        component=\"nav\"\n        aria-label=\"main mailbox folders\"\n      >\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>{username.charAt(0).toUpperCase()}</Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={username} />\n        </ListItem>\n\n        <Divider />\n\n        <ListItem button onClick={() => setIsDialogOpen(true)}>\n          <ListItemIcon>\n            <BackupIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Upload File\" />\n        </ListItem>\n\n        <ListItem\n          button\n          onClick={() => dispatch(SetAirports(defaultAirports.aerodromes))}\n        >\n          <ListItemIcon>\n            <RoomIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Load Example Airports\" />\n        </ListItem>\n\n        <ListItem>\n          <AirportTable />\n        </ListItem>\n      </List>\n    </>\n  );\n}\n\nexport default MainPageSideBar;\n","import React, { useEffect, useState } from \"react\";\n\n//Utility\nimport { ParseDMS, ConvertDMSToDD } from \"../../Utility/AirportParse.js\";\n\n//Store\nimport { useSelector } from \"react-redux\";\nimport { selectAllAirports } from \"../../Store/Slices/airportSlice\";\n\n//Props: containerId: id for the container of the map\nfunction MainMap(props) {\n  const airports = useSelector(selectAllAirports);\n  const id = props.containerId;\n\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    /*global L*/\n    const mymap = L.map(id).setView([-22.002917, -47.89875], 13);\n    L.tileLayer(\n      \"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\",\n      {\n        attribution:\n          'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18,\n        id: \"mapbox/streets-v11\",\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken:\n          \"pk.eyJ1IjoiY2Ftb2xlemkiLCJhIjoiY2tmaG5xdnptMDZ2cDJ4bGRodjRteWsxbSJ9.M97VIuz7PtgpErxwqAX7QQ\",\n      }\n    ).addTo(mymap);\n\n    setMap(mymap);\n  }, []);\n\n  useEffect(() => {\n    if (!map) return;\n\n    let allPositions = [];\n\n    airports.forEach((airport) => {\n      const airportCoord = ConvertDMSToDD(ParseDMS(airport.description));\n      if (!airportCoord) return;\n\n      allPositions.push(airportCoord);\n\n      const marker = L.marker(airportCoord, {\n        title: airport.name,\n      })\n        .on(\"click\", (e) => {\n          map.flyTo(e.target.getLatLng(), 13);\n        })\n        .addTo(map);\n\n      marker.bindPopup(L.popup().setContent(airport.name));\n    });\n\n    map.flyToBounds(allPositions);\n  }, [airports]);\n\n  return <> </>;\n}\n\nexport default MainMap;\n","import React, { useEffect } from \"react\";\n\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport SideBar from \"./SideBar.js\";\nimport MainMap from \"./Map.js\";\n\nimport { Redirect } from \"react-router-dom\";\n\n//store\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectLogged, selectLogin } from \"../../Store/Slices/loginSlice.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    width: 400,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 10,\n    padding: theme.spacing(3),\n    height: \"1000px\",\n  },\n}));\n\nfunction MainPageView() {\n  const classes = useStyles();\n  const username = useSelector(selectLogin);\n  const isLogged = useSelector(selectLogged);\n\n  //User not logged - redirect to login\n  if (!isLogged) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <main className={classes.root}>\n      <Paper variant=\"outlined\" square className={classes.drawer}>\n        <SideBar username={username} />\n      </Paper>\n\n      <section id=\"mainMap\" className={classes.content}>\n        <MainMap containerId=\"mainMap\" />\n      </section>\n    </main>\n  );\n}\n\nexport default MainPageView;\n","import { useState, useEffect } from \"react\";\n\n//This hook is used to help with validation with text fields in forms\n\n/*\n\tUsage:\n\t\n\t\tinput:\n\t\tvalidationObject : object - A object with validation functions as values.\n\t\t\tA validation function is a function that receive a text argument and returns a error message\n\t\t\t\tif the text input is invalid, or a null string if the text input is valid. \n\t\t\tIt is suggested that the keys of the validationObject are the used IDs for the input fields on the forms.\n\n\t\treturned:\n\t\t\t[elementState,]\n\t\t\tIts returned two values:\n\t\t\tElementState a object associating the providaded id input and the current given error message for a input field\n\t\t\t\tuse this to display real time error messages. If there are no errors an empty string is associated with the field.\n\n\t\t\tThe second returned value is a function that needs to be called in the \"onChange\" function of all the input fields. This function\n\t\t\t\texpects the onChange event as a parameter\n*/\n\nfunction useFormValidation(validationObject) {\n  const [elementsState, setElementsState] = useState({});\n\n  function setElement(id, value) {\n    setElementsState({ ...elementsState, [id]: value });\n  }\n\n  useEffect(() => {\n    Object.keys(validationObject).forEach((id) => {\n      setElement(id, \"\");\n    });\n  }, []);\n\n  return [\n    elementsState,\n    function (_id) {\n      return (e) => {\n        setElement(_id, validationObject[_id](e.target.value));\n      };\n    },\n  ];\n}\n\n//This function is just a utility function for creating validation in forms- Use this only with textField and button components\n//The first returned value is a object containing the props for TextField components, and the second the props for a the submit button.\nfunction useValidationPropsTextField(validationObject) {\n  const [formError, onChangeFormError] = useFormValidation(validationObject);\n\n  function checkButtonState() {\n    let errors = \"\";\n    //Concatenate all strings\n    Object.keys(formError).forEach((id) => {\n      errors += formError[id];\n    });\n    return Boolean(errors);\n  }\n\n  return [\n    (id) => {\n      return {\n        /*Empty string will evaluate to false*/\n        error: Boolean(formError[id]),\n\n        helperText: formError[id],\n\n        onChange: (e) => {\n          onChangeFormError(id)(e);\n        },\n      };\n    },\n    { disabled: checkButtonState() },\n  ];\n}\n\nexport { useFormValidation, useValidationPropsTextField };\n","import React, { useState } from \"react\";\n\nimport {\n  Grid,\n  TextField,\n  Button,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\n\nimport BasicForm from \"../Components/BasicForm.js\";\nimport { useValidationPropsTextField } from \"../Hooks/useFormValidation.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: \"2em\",\n  },\n}));\n\nfunction SignUpView() {\n  const classes = useStyles();\n  const routerHistory = useHistory();\n\n  const id_username = \"usernameField\";\n  const id_email = \"emailField\";\n  const id_password = \"passwordField\";\n  const id_passwordConfirmation = \"passwordConfirmField\";\n\n  const [passwordValue, setPasswordValue] = useState(\"\");\n\n  const validationObject = {\n    [id_username]: (text) => {\n      if (text.length < 5) return \"Login must have more than 5 characters\";\n      return \"\";\n    },\n    [id_email]: (text) => {\n      const emailRegex = /\\S+@\\S+\\.\\S+/;\n      if (!emailRegex.test(text)) return \"Please type a valid email\";\n      return \"\";\n    },\n    [id_password]: (text) => {\n      setPasswordValue(text);\n      if (text.length < 8) return \"Password must have more than 8 characters\";\n      return \"\";\n    },\n    [id_passwordConfirmation]: (text) => {\n      if (text !== passwordValue) return \"Passwords are not equal\";\n      return \"\";\n    },\n  };\n\n  const [validationProps, buttonProps] = useValidationPropsTextField(\n    validationObject\n  );\n\n  const SignUpForm = (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"stretch\"\n      alignContent=\"center\"\n      spacing={2}\n      className={classes.gridCointainer}\n    >\n      <Grid item xs={12}>\n        <TextField\n          name=\"login\"\n          required\n          fullWidth\n          autoFocus={true}\n          label=\"Username\"\n          variant=\"outlined\"\n          id={id_username}\n          {...validationProps(id_username)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <TextField\n          name=\"email\"\n          required\n          fullWidth\n          type=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          id={id_email}\n          {...validationProps(id_email)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <TextField\n          name=\"password\"\n          required\n          fullWidth\n          type=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          id={id_password}\n          {...validationProps(id_password)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          required\n          type=\"password\"\n          label=\"Confirm password\"\n          variant=\"outlined\"\n          id={id_passwordConfirmation}\n          {...validationProps(id_passwordConfirmation)}\n        />\n      </Grid>\n\n      <Grid item xs={12}></Grid>\n\n      <Grid item xs={12}>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          {...buttonProps}\n        >\n          SUBMIT\n        </Button>\n      </Grid>\n    </Grid>\n  );\n\n  function afterSinUp(ok, obj) {\n    if (ok) {\n      routerHistory.push(\"/login\");\n    }\n    //We would handle errors here\n  }\n\n  return (\n    <Container className={classes.root} maxWidth=\"sm\">\n      <BasicForm id=\"signupform\" afterSubmit={afterSinUp}>\n        {SignUpForm}\n      </BasicForm>\n    </Container>\n  );\n}\n\nexport default SignUpView;\n","import React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n//Views\nimport LoginView from \"./Views/LoginView.js\";\nimport MainPageView from \"./Views/MainPage/MainPageView.js\";\nimport SingUpView from \"./Views/SingUpView.js\";\n\nfunction App() {\n  return (\n    <Router basename=\"/xmobots-project\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n\n        <Route exact path=\"/home\">\n          <MainPageView />\n        </Route>\n\n        <Route exact path=\"/login\">\n          <LoginView />\n        </Route>\n\n        <Route exact path=\"/signup\">\n          <SingUpView />\n        </Route>\n\n        <Route>404 not found</Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport loginReducer from \"./Slices/loginSlice.js\";\nimport airportReducer from \"./Slices/airportSlice.js\";\n\nexport default configureStore({\n  reducer: {\n    login: loginReducer,\n    airport: airportReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/reduxStore.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}